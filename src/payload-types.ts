/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    heading?: {
      /**
       * Enter the text inside "|" symbols to highlight text in red. Example: "Regular text |highlighted text| regular text"
       */
      content?: string | null;
      fontFamily?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
      /**
       * Enter value with unit (e.g., 2rem, 24px)
       */
      fontSize?: string | null;
    };
    description?: {
      content?: string | null;
      fontFamily?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
      /**
       * Enter value with unit (e.g., 2rem, 24px)
       */
      fontSize?: string | null;
    };
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | TestimonialsBlock
    | CounselingBlock
    | UniversitiesBlock
    | StudyAbroadBlock
    | IELTSBlock
    | GetStartedBlock
    | MapBlock
    | WorldStudentBlock
    | AppointmentBlock
    | ServiceBlock
    | FAQBlock
    | FutureBlock
    | AdminssionBlock
    | CareerBlock
    | WhyusMediaBlock
    | ConnectBlock
    | CallActionBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  heading: string;
  description: string;
  testimonials?:
    | {
        image: number | Media;
        review: string;
        name: string;
        course: string;
        universityImage: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonialsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CounselingBlock".
 */
export interface CounselingBlock {
  heading: string;
  description: string;
  button: {
    text: string;
    url: string;
  };
  backgroundImage: number | Media;
  cards?:
    | {
        title: string;
        courseName: string;
        cardImage: number | Media;
        icon: number | Media;
        countries?:
          | {
              name: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'counselingBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversitiesBlock".
 */
export interface UniversitiesBlock {
  mainHeading: string;
  subHeading: string;
  description: string;
  stats?:
    | {
        value: string;
        label: string;
        id?: string | null;
      }[]
    | null;
  universitiesImages?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'universitiesBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StudyAbroadBlock".
 */
export interface StudyAbroadBlock {
  heading: string;
  subheading: string;
  description: string;
  title: {
    content: string;
    font?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
    /**
     * Enter value with unit (e.g., 2rem, 24px)
     */
    size?: string | null;
  };
  titleDescription: string;
  cards?:
    | {
        courseDescription: string;
        description: string;
        buttonText: string;
        buttonLink: string;
        image: number | Media;
        imagePosition: 'left' | 'right';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'studyAbroadBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IELTSBlock".
 */
export interface IELTSBlock {
  title: string;
  subtitle: string;
  description: string;
  ieltsText: string;
  ieltsImage: number | Media;
  learningType: {
    title: string;
    subtitle: string;
  };
  studyModes?:
    | {
        label: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  ctaButton: {
    text: string;
    href: string;
  };
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ieltsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GetStartedBlock".
 */
export interface GetStartedBlock {
  heading: string;
  title: string;
  /**
   * Add features that will be displayed with bullet points
   */
  features: {
    text: string;
    id?: string | null;
  }[];
  footerText: string;
  /**
   * Upload an image of a graduate student (recommended size: 600x800)
   */
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'getStartedBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MapBlock".
 */
export interface MapBlock {
  heading: string;
  /**
   * Add office locations that will be displayed on the map
   */
  offices: {
    name: string;
    address: string;
    /**
     * Paste the iframe embed code for the map of this office
     */
    mapIframe: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'mapBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorldStudentBlock".
 */
export interface WorldStudentBlock {
  backgroundImage: number | Media;
  title: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  items: {
    image: number | Media;
    title: string;
    'z-index': number;
    top?: number | null;
    bottom?: number | null;
    right?: number | null;
    left?: number | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'worldStudentBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AppointmentBlock".
 */
export interface AppointmentBlock {
  leftContent: {
    title: string;
    subTitle: string;
    highlightText: string;
    extraText: string;
    paragraphs?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    button: {
      text: string;
      url: string;
    };
  };
  right: {
    schedule: {
      date: string;
      day: string;
      slots?:
        | {
            time: string;
            id?: string | null;
          }[]
        | null;
    };
    universities?:
      | {
          img: number | Media;
          alt?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  bottomText: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'appointmentBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceBlock".
 */
export interface ServiceBlock {
  backgroundimage?: (number | null) | Media;
  mainHeading: string;
  mainHeadingStyles?: {
    family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
    size?: string | null;
    color?: string | null;
    backgroundColor?: string | null;
  };
  description: string;
  subDescription: string;
  descriptionStyle?: {
    family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
    size?: string | null;
    color?: string | null;
    backgroundColor?: string | null;
  };
  buttonText: string;
  buttonStyle?: {
    family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
    size?: string | null;
    color?: string | null;
    backgroundColor?: string | null;
  };
  services: {
    title: string;
    description: string;
    id?: string | null;
  }[];
  serviceStyles?: {
    family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat') | null;
    size?: string | null;
    color?: string | null;
    backgroundColor?: string | null;
  };
  /**
   * Background color for the service block
   */
  backgroundColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  title: string;
  /**
   * Add FAQ items with questions and answers
   */
  faqs: {
    question: string;
    answer: string;
    id?: string | null;
  }[];
  styles?: {
    titleStyles?: {
      fontSize?: string | null;
      fontWeight?: ('normal' | 'medium' | 'bold') | null;
      textAlign?: ('left' | 'center' | 'right') | null;
    };
    quesStyles?: {
      fontSize?: string | null;
      fontWeight?: ('normal' | 'medium' | 'bold') | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FutureBlock".
 */
export interface FutureBlock {
  mainHeading: string;
  connectText: string;
  buttonText: string;
  callText: string;
  studentImage: number | Media;
  logoImage: number | Media;
  offices: {
    name: string;
    phoneNumbers: {
      number: string;
      id?: string | null;
    }[];
    id?: string | null;
  }[];
  headingStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  connectStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  officeStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'futureBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdminssionBlock".
 */
export interface AdminssionBlock {
  year: string;
  yearStyles?:
    | {
        /**
         * Select the font family
         */
        Family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat' | 'Delius' | 'Lato' | 'Poppins') | null;
        /**
         * Enter value with unit (e.g., 2rem, 24px)
         */
        Size?: string | null;
        /**
         * Hex color code (e.g., #FFFFFF)
         */
        Color?: string | null;
        id?: string | null;
      }[]
    | null;
  day: string;
  currentDescription: string;
  currentStyles?:
    | {
        /**
         * Select the font family
         */
        Family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat' | 'Delius' | 'Lato' | 'Poppins') | null;
        /**
         * Enter value with unit (e.g., 2rem, 24px)
         */
        Size?: string | null;
        /**
         * Hex color code (e.g., #FFFFFF)
         */
        Color?: string | null;
        id?: string | null;
      }[]
    | null;
  currentYear: string;
  ambitions: string;
  description: string;
  successRate: string;
  /**
   * Add statistics that will be displayed
   */
  statistics: {
    value: string;
    label: string;
    id?: string | null;
  }[];
  /**
   * Add courses that will be displayed
   */
  courses: {
    name: string;
    id?: string | null;
  }[];
  textStyles?:
    | {
        /**
         * Select the font family
         */
        Family?: ('Inter' | 'Roboto' | 'Open Sans' | 'Montserrat' | 'Delius' | 'Lato' | 'Poppins') | null;
        /**
         * Enter value with unit (e.g., 2rem, 24px)
         */
        Size?: string | null;
        /**
         * Hex color code (e.g., #FFFFFF)
         */
        Color?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'adminssionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careerBlock".
 */
export interface CareerBlock {
  worldMapImage: number | Media;
  mainHeading: string;
  mainSubheading: string;
  secondaryHeading: string;
  secondarySubheading: string;
  statistics: {
    value: string;
    label: string;
    id?: string | null;
  }[];
  bText?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  headStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  subStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  statStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  Styles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'careerBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyusMediaBlock".
 */
export interface WhyusMediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'whyusMediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ConnectBlock".
 */
export interface ConnectBlock {
  mainHeading: string;
  connectText: string;
  buttonText: string;
  headingStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  connectStyles?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'connectBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallActionBlock".
 */
export interface CallActionBlock {
  callText: string;
  studentImage: number | Media;
  logoImage: number | Media;
  offices: {
    name: string;
    phoneNumbers: {
      number: string;
      id?: string | null;
    }[];
    id?: string | null;
  }[];
  officeStyle?:
    | {
        family?: ('Inter' | 'Roboto' | 'Poppins') | null;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'callActionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        heading?:
          | T
          | {
              content?: T;
              fontFamily?: T;
              fontSize?: T;
            };
        description?:
          | T
          | {
              content?: T;
              fontFamily?: T;
              fontSize?: T;
            };
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        testimonialsBlock?: T | TestimonialsBlockSelect<T>;
        counselingBlock?: T | CounselingBlockSelect<T>;
        universitiesBlock?: T | UniversitiesBlockSelect<T>;
        studyAbroadBlock?: T | StudyAbroadBlockSelect<T>;
        ieltsBlock?: T | IELTSBlockSelect<T>;
        getStartedBlock?: T | GetStartedBlockSelect<T>;
        mapBlock?: T | MapBlockSelect<T>;
        worldStudentBlock?: T | WorldStudentBlockSelect<T>;
        appointmentBlock?: T | AppointmentBlockSelect<T>;
        serviceBlock?: T | ServiceBlockSelect<T>;
        faqBlock?: T | FAQBlockSelect<T>;
        futureBlock?: T | FutureBlockSelect<T>;
        adminssionBlock?: T | AdminssionBlockSelect<T>;
        careerBlock?: T | CareerBlockSelect<T>;
        whyusMediaBlock?: T | WhyusMediaBlockSelect<T>;
        connectBlock?: T | ConnectBlockSelect<T>;
        callActionBlock?: T | CallActionBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  testimonials?:
    | T
    | {
        image?: T;
        review?: T;
        name?: T;
        course?: T;
        universityImage?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CounselingBlock_select".
 */
export interface CounselingBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  button?:
    | T
    | {
        text?: T;
        url?: T;
      };
  backgroundImage?: T;
  cards?:
    | T
    | {
        title?: T;
        courseName?: T;
        cardImage?: T;
        icon?: T;
        countries?:
          | T
          | {
              name?: T;
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversitiesBlock_select".
 */
export interface UniversitiesBlockSelect<T extends boolean = true> {
  mainHeading?: T;
  subHeading?: T;
  description?: T;
  stats?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  universitiesImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StudyAbroadBlock_select".
 */
export interface StudyAbroadBlockSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  description?: T;
  title?:
    | T
    | {
        content?: T;
        font?: T;
        size?: T;
      };
  titleDescription?: T;
  cards?:
    | T
    | {
        courseDescription?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
        image?: T;
        imagePosition?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IELTSBlock_select".
 */
export interface IELTSBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  ieltsText?: T;
  ieltsImage?: T;
  learningType?:
    | T
    | {
        title?: T;
        subtitle?: T;
      };
  studyModes?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  features?:
    | T
    | {
        text?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        text?: T;
        href?: T;
      };
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GetStartedBlock_select".
 */
export interface GetStartedBlockSelect<T extends boolean = true> {
  heading?: T;
  title?: T;
  features?:
    | T
    | {
        text?: T;
        id?: T;
      };
  footerText?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MapBlock_select".
 */
export interface MapBlockSelect<T extends boolean = true> {
  heading?: T;
  offices?:
    | T
    | {
        name?: T;
        address?: T;
        mapIframe?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorldStudentBlock_select".
 */
export interface WorldStudentBlockSelect<T extends boolean = true> {
  backgroundImage?: T;
  title?: T;
  items?:
    | T
    | {
        image?: T;
        title?: T;
        'z-index'?: T;
        top?: T;
        bottom?: T;
        right?: T;
        left?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AppointmentBlock_select".
 */
export interface AppointmentBlockSelect<T extends boolean = true> {
  leftContent?:
    | T
    | {
        title?: T;
        subTitle?: T;
        highlightText?: T;
        extraText?: T;
        paragraphs?:
          | T
          | {
              text?: T;
              id?: T;
            };
        button?:
          | T
          | {
              text?: T;
              url?: T;
            };
      };
  right?:
    | T
    | {
        schedule?:
          | T
          | {
              date?: T;
              day?: T;
              slots?:
                | T
                | {
                    time?: T;
                    id?: T;
                  };
            };
        universities?:
          | T
          | {
              img?: T;
              alt?: T;
              id?: T;
            };
      };
  bottomText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceBlock_select".
 */
export interface ServiceBlockSelect<T extends boolean = true> {
  backgroundimage?: T;
  mainHeading?: T;
  mainHeadingStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        backgroundColor?: T;
      };
  description?: T;
  subDescription?: T;
  descriptionStyle?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        backgroundColor?: T;
      };
  buttonText?: T;
  buttonStyle?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        backgroundColor?: T;
      };
  services?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  serviceStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        backgroundColor?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  title?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  styles?:
    | T
    | {
        titleStyles?:
          | T
          | {
              fontSize?: T;
              fontWeight?: T;
              textAlign?: T;
            };
        quesStyles?:
          | T
          | {
              fontSize?: T;
              fontWeight?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FutureBlock_select".
 */
export interface FutureBlockSelect<T extends boolean = true> {
  mainHeading?: T;
  connectText?: T;
  buttonText?: T;
  callText?: T;
  studentImage?: T;
  logoImage?: T;
  offices?:
    | T
    | {
        name?: T;
        phoneNumbers?:
          | T
          | {
              number?: T;
              id?: T;
            };
        id?: T;
      };
  headingStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  connectStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  officeStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdminssionBlock_select".
 */
export interface AdminssionBlockSelect<T extends boolean = true> {
  year?: T;
  yearStyles?:
    | T
    | {
        Family?: T;
        Size?: T;
        Color?: T;
        id?: T;
      };
  day?: T;
  currentDescription?: T;
  currentStyles?:
    | T
    | {
        Family?: T;
        Size?: T;
        Color?: T;
        id?: T;
      };
  currentYear?: T;
  ambitions?: T;
  description?: T;
  successRate?: T;
  statistics?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  courses?:
    | T
    | {
        name?: T;
        id?: T;
      };
  textStyles?:
    | T
    | {
        Family?: T;
        Size?: T;
        Color?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careerBlock_select".
 */
export interface CareerBlockSelect<T extends boolean = true> {
  worldMapImage?: T;
  mainHeading?: T;
  mainSubheading?: T;
  secondaryHeading?: T;
  secondarySubheading?: T;
  statistics?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  bText?:
    | T
    | {
        text?: T;
        id?: T;
      };
  headStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  subStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  statStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  Styles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyusMediaBlock_select".
 */
export interface WhyusMediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ConnectBlock_select".
 */
export interface ConnectBlockSelect<T extends boolean = true> {
  mainHeading?: T;
  connectText?: T;
  buttonText?: T;
  headingStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  connectStyles?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallActionBlock_select".
 */
export interface CallActionBlockSelect<T extends boolean = true> {
  callText?: T;
  studentImage?: T;
  logoImage?: T;
  offices?:
    | T
    | {
        name?: T;
        phoneNumbers?:
          | T
          | {
              number?: T;
              id?: T;
            };
        id?: T;
      };
  officeStyle?:
    | T
    | {
        family?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  description?: string | null;
  copyright: string;
  services?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  about?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  help?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  legal?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  social?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  description?: T;
  copyright?: T;
  services?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  about?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  help?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  legal?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  social?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}